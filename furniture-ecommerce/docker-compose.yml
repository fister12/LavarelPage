version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: furniture_app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_DATABASE=furniture_ecommerce
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - SEED_DATABASE=true
    volumes:
      - app_storage:/var/www/html/storage
      - app_logs:/var/www/html/storage/logs
    ports:
      - "8000:80"
    depends_on:
      - mysql
      - redis
    networks:
      - furniture_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: furniture_mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=furniture_ecommerce
      - MYSQL_USER=laravel_user
      - MYSQL_PASSWORD=secure_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - furniture_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: furniture_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - furniture_network
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Load Balancer (Optional for scaling)
  nginx:
    image: nginx:alpine
    container_name: furniture_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - app_storage:/var/www/html/storage:ro
    depends_on:
      - app
    networks:
      - furniture_network

  # Mailhog for Email Testing (Development)
  mailhog:
    image: mailhog/mailhog
    container_name: furniture_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - furniture_network

  # PhpMyAdmin for Database Management (Development)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: furniture_phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=mysql
      - PMA_USER=laravel_user
      - PMA_PASSWORD=secure_password
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - furniture_network

  # Redis Commander for Redis Management (Development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: furniture_redis_commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - furniture_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_logs:
    driver: local

networks:
  furniture_network:
    driver: bridge
